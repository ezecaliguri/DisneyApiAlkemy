// <auto-generated />
using System;
using DisneyApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DisneyApiAlkemy.Migrations
{
    [DbContext(typeof(DisneyConnection))]
    [Migration("20220727021238_InitialDbAndSeed")]
    partial class InitialDbAndSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DisneyApi.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("History")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Character", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 23,
                            History = "Es un personaje creado por los estadounidenses Stan Lee y Steve Ditko",
                            Image = "Url de la imagen",
                            Name = "Hombre Araña",
                            Weight = 60
                        },
                        new
                        {
                            Id = 2,
                            Age = 18,
                            History = "Es el personaje principal de la saga Harry Potter",
                            Image = "Url de la imagen",
                            Name = "Harry Potter",
                            Weight = 74
                        },
                        new
                        {
                            Id = 3,
                            Age = 55,
                            History = "es un superhéroe que aparece en los cómics estadounidenses publicados por Marvel Comics.",
                            Image = "Url de la imagen",
                            Name = "Iron Man",
                            Weight = 120
                        },
                        new
                        {
                            Id = 4,
                            Age = 23,
                            History = "Hulk es un personaje ficticio, un superhéroe que aparece en los cómics estadounidenses publicados por la editorial Marvel Comics,",
                            Image = "Url de la imagen",
                            Name = "Hulk",
                            Weight = 200
                        },
                        new
                        {
                            Id = 5,
                            Age = 18,
                            History = "Hermione Jean Granger es un personaje de ficción y una de los tres protagonistas principales de la serie de libros de Harry Potter, publicados por J. K.",
                            Image = "Url de la imagen",
                            Name = "Hermione Granger",
                            Weight = 80
                        });
                });

            modelBuilder.Entity("DisneyApi.Models.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Gender", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Image = "Url de la imagen",
                            Name = "Fantasia"
                        },
                        new
                        {
                            Id = 2,
                            Image = "Url de la imagen",
                            Name = "Accion"
                        },
                        new
                        {
                            Id = 3,
                            Image = "Url de la imagen",
                            Name = "Drama"
                        },
                        new
                        {
                            Id = 4,
                            Image = "Url de la imagen",
                            Name = "Comedia"
                        });
                });

            modelBuilder.Entity("DisneyApi.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Qualification")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Movie", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2007, 5, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Image = "Url de la imagen",
                            Qualification = 8,
                            Title = "Spiderman"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2005, 10, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Image = "Url de la imagen",
                            Qualification = 9,
                            Title = "Harry Potter 4"
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2012, 4, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Image = "Url de la imagen",
                            Qualification = 6,
                            Title = "Avengers"
                        });
                });

            modelBuilder.Entity("DisneyApi.Models.MovieCharacter", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.HasKey("CharacterId", "MovieId");

                    b.HasIndex("MovieId");

                    b.ToTable("MovieCharacter", (string)null);

                    b.HasData(
                        new
                        {
                            CharacterId = 1,
                            MovieId = 1,
                            Id = 1
                        },
                        new
                        {
                            CharacterId = 2,
                            MovieId = 2,
                            Id = 2
                        },
                        new
                        {
                            CharacterId = 3,
                            MovieId = 3,
                            Id = 3
                        },
                        new
                        {
                            CharacterId = 4,
                            MovieId = 3,
                            Id = 4
                        },
                        new
                        {
                            CharacterId = 5,
                            MovieId = 2,
                            Id = 5
                        },
                        new
                        {
                            CharacterId = 3,
                            MovieId = 1,
                            Id = 6
                        });
                });

            modelBuilder.Entity("DisneyApi.Models.MovieGender", b =>
                {
                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.HasKey("GenderId", "MovieId");

                    b.HasIndex("MovieId");

                    b.ToTable("MovieGender", (string)null);

                    b.HasData(
                        new
                        {
                            GenderId = 3,
                            MovieId = 3,
                            Id = 1
                        },
                        new
                        {
                            GenderId = 2,
                            MovieId = 1,
                            Id = 2
                        },
                        new
                        {
                            GenderId = 3,
                            MovieId = 1,
                            Id = 3
                        },
                        new
                        {
                            GenderId = 1,
                            MovieId = 2,
                            Id = 4
                        },
                        new
                        {
                            GenderId = 2,
                            MovieId = 2,
                            Id = 5
                        });
                });

            modelBuilder.Entity("DisneyApi.Models.MovieCharacter", b =>
                {
                    b.HasOne("DisneyApi.Models.Character", "Character")
                        .WithMany("MovieCharacters")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DisneyApi.Models.Movie", "Movie")
                        .WithMany("MovieCharacters")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("DisneyApi.Models.MovieGender", b =>
                {
                    b.HasOne("DisneyApi.Models.Gender", "Gender")
                        .WithMany("MovieGenders")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DisneyApi.Models.Movie", "Movie")
                        .WithMany("MovieGenders")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gender");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("DisneyApi.Models.Character", b =>
                {
                    b.Navigation("MovieCharacters");
                });

            modelBuilder.Entity("DisneyApi.Models.Gender", b =>
                {
                    b.Navigation("MovieGenders");
                });

            modelBuilder.Entity("DisneyApi.Models.Movie", b =>
                {
                    b.Navigation("MovieCharacters");

                    b.Navigation("MovieGenders");
                });
#pragma warning restore 612, 618
        }
    }
}
